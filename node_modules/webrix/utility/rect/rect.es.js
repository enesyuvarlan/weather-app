var t=function(t){return[t.left+t.width/2,t.top+t.height/2]},r=function(r,e){var i=t(r),n=t(e),o=i[0]-n[0],h=i[1]-n[1];return[o?o/Math.abs(o):o,h?h/Math.abs(h):h]},e=function(t,r){return["top","left","width","height"].every((function(e){return t[e]===r[e]}))},i=function(t,r){return r.right>=t.left&&r.left<=t.right&&r.top<=t.bottom&&r.bottom>=t.top},n=function(t,r){if(i(t,r)){var e=Math.max(t.left,r.left),n=Math.max(t.top,r.top),o=Math.min(t.right,r.right),h=Math.min(t.bottom,r.bottom);return new DOMRect(e,n,o-e,h-n)}},o=function(t){return t.width*t.height},h=function(t){if(t.borderBoxSize){var r=Array.isArray(t.borderBoxSize)?t.borderBoxSize[0]:t.borderBoxSize;return{width:r.inlineSize,height:r.blockSize}}var e=t.target.getBoundingClientRect();return{width:e.width,height:e.height}};export{o as area,e as equal,t as getCenterPoint,r as getRelativePosition,i as intersect,h as readResizeObserverEntry,n as union};
